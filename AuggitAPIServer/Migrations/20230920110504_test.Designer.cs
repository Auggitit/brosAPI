// <auto-generated />
using System;
using AuggitAPIServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuggitAPIServer.Migrations
{
    [DbContext(typeof(AuggitAPIServerContext))]
    [Migration("20230920110504_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuggitAPIServer.Model.ACCOUNTS.accountentry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("acccode")
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("comp")
                        .HasColumnType("text");

                    b.Property<decimal>("cr")
                        .HasColumnType("numeric");

                    b.Property<decimal>("dr")
                        .HasColumnType("numeric");

                    b.Property<string>("entrytype")
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("gst")
                        .HasColumnType("text");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("accountentry");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.ACCOUNTS.GstData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("CGST_Per")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CGST_Val")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HSN")
                        .HasColumnType("text");

                    b.Property<decimal>("IGST_Per")
                        .HasColumnType("numeric");

                    b.Property<decimal>("IGST_Val")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SGST_Per")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SGST_Val")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("SupplyType")
                        .HasColumnType("text");

                    b.Property<decimal>("Taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("VchDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VchNo")
                        .HasColumnType("text");

                    b.Property<string>("VchType")
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GstData");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.ACCOUNTS.overdueentry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("comp")
                        .HasColumnType("text");

                    b.Property<DateTime>("dueon")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("entryno")
                        .HasColumnType("text");

                    b.Property<string>("entrytype")
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("ledgercode")
                        .HasColumnType("text");

                    b.Property<decimal>("received")
                        .HasColumnType("numeric");

                    b.Property<decimal>("returned")
                        .HasColumnType("numeric");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vouchertype")
                        .HasColumnType("text");

                    b.Property<string>("vtype")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("overdueentry");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.ACCOUNTS.voucherEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("acccode")
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("chqdate")
                        .HasColumnType("text");

                    b.Property<string>("chqno")
                        .HasColumnType("text");

                    b.Property<string>("comp")
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("ledgercode")
                        .HasColumnType("text");

                    b.Property<string>("paymode")
                        .HasColumnType("text");

                    b.Property<string>("refdate")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("vchno")
                        .HasColumnType("integer");

                    b.Property<string>("vchtype")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("voucherEntry");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.CRNOTE.vCR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgsttotal")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<int>("crid")
                        .HasColumnType("integer");

                    b.Property<string>("customercode")
                        .HasColumnType("text");

                    b.Property<string>("customername")
                        .HasColumnType("text");

                    b.Property<decimal>("discounttotal")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igsttotal")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("salesbilldate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("salesbillno")
                        .HasColumnType("text");

                    b.Property<decimal>("sgsttotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsrate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsvalue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("vchcreateddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vCR");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.CRNOTE.vCRDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("salesbilldate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("salesbillno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("vchcreateddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vCRDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.DRNOTE.vDR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgsttotal")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("discounttotal")
                        .HasColumnType("numeric");

                    b.Property<int>("drid")
                        .HasColumnType("integer");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igsttotal")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("purchasebilldate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("purchasebillno")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("sgsttotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsrate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsvalue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("vchcreateddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .HasColumnType("text");

                    b.Property<string>("vendorname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vDR");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.DRNOTE.vDRDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<DateTime>("purchasebilldate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("purchasebillno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("uomcoode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("vchcreateddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vDRDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.DYFIELD.pdef", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("pdef");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.DYFIELD.sdef", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("sdef");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.GRN.vGrn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("accountname")
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("closingValue")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("deliveryaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<DateTime>("grndate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("grnid")
                        .HasColumnType("integer");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("saleaccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tds")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .HasColumnType("text");

                    b.Property<string>("vendorname")
                        .HasColumnType("text");

                    b.Property<DateTime?>("vinvdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vinvno")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vGrn");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.GRN.vGrnCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("grntype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vGrnCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.GRN.vGrnDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<DateTime>("grndate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("qtymt")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vGrnDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.GRN.vSGrn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("accountname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("closingValue")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("deliveryaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<DateTime>("grndate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("saleaccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("sgrnid")
                        .HasColumnType("integer");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tds")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .HasColumnType("text");

                    b.Property<string>("vendorname")
                        .HasColumnType("text");

                    b.Property<DateTime?>("vinvdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vinvno")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSGrn");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.GRN.vSGrnCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("grntype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vSGrnCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.GRN.vSGrnDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<DateTime>("grndate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("qtymt")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSGrnDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.AccountMaster.mDeliveryAddress", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("deliveryAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ledgercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("mDeliveryAddress");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.AccountMaster.mLedgerGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("groupcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("groupname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("groupunder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("natureofgroup")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("mLedgerGroup");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.AccountMaster.mLedgers", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BalancetoCollect")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BalancetoPay")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BankDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BilingAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BilingCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BilingCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BilingPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BilingPincode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BilingState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CINNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyDisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyEmailID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyMobileNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyWebSite")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPersonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreditLimit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeliveryCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeliveryCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeliveryPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeliveryPinCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeliveryState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GSTNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GSTTreatment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LedgerCode")
                        .HasColumnType("integer");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PANNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaaymentTerm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salutation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("accNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("accholdername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gstper")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gsttype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ifscCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("stateCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("swiftCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("taxtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("mLedgers");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.GeneralMaster.mCompany", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BillWiseEntry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EInvoiceApplicableFrom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EWAYBillApplicableFrom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("EWAYBillIntraStateLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("EWAYBillLimit")
                        .HasColumnType("numeric");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableEInvoice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableEWAY")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableEWAYIntraState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableGST")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableITExmLimitforTDSDeduction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableLutBondDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableTDS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableTDSForStockItems")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableTaxLibonAdvanceReceipt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnableTaxLibonReverseCharges")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("GSTApplicableFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GSTRegType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GSTState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GSTStateCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GSTno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LutBondFrom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LutBondNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LutBondTo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MailingName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaintainAccounts")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TANNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TDSAccNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("mCompany");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.GeneralMaster.mCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("countryname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("currencyname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("currencyshortname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("currencysymbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("mCountry");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.GeneralMaster.mState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("statename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("stetecode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("mState");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.GeneralMaster.mVoucherType", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("perfix")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchNumbering")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchunder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("voucherAccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("mVoucherType");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.InventoryMaster.HSNModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("branchcode")
                        .HasColumnType("text");

                    b.Property<string>("companycode")
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("gst")
                        .HasColumnType("text");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("HSNModels");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.InventoryMaster.mCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("catcode")
                        .HasColumnType("integer");

                    b.Property<string>("catname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("catunder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("mCategory");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.InventoryMaster.mItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("cess")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<string>("gstApplicable")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gstCalculationtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("itemcategory")
                        .HasColumnType("integer");

                    b.Property<int>("itemcode")
                        .HasColumnType("integer");

                    b.Property<string>("itemhsn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("itemname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("itemsku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("itemunder")
                        .HasColumnType("integer");

                    b.Property<decimal>("rateofDuty")
                        .HasColumnType("numeric");

                    b.Property<string>("taxable")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("typeofSupply")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("uom")
                        .HasColumnType("integer");

                    b.Property<decimal>("vat")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("mItem");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.InventoryMaster.mItemgroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("groupcode")
                        .HasColumnType("integer");

                    b.Property<string>("groupname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("groupunder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("mItemgroup");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.MASTER.InventoryMaster.mUom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("digits")
                        .HasColumnType("numeric");

                    b.Property<int>("uomcode")
                        .HasColumnType("integer");

                    b.Property<string>("uomname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("mUom");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.PO.OtherAccEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("acccode")
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("comp")
                        .HasColumnType("text");

                    b.Property<decimal>("cr")
                        .HasColumnType("numeric");

                    b.Property<decimal>("dr")
                        .HasColumnType("numeric");

                    b.Property<string>("entrytype")
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("gst")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("hsn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("vchdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OtherAccEntry");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.PO.poCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("pono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("potype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("poCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.PO.spoCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("pono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("potype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("spoCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.PO.vPO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ponoid")
                        .HasColumnType("integer");

                    b.Property<string>("potype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.Property<string>("vendorcode")
                        .HasColumnType("text");

                    b.Property<string>("vendorname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vPO");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.PO.vPODetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("potype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vPODetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.PO.vSPO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("potype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<int>("spoid")
                        .HasColumnType("integer");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.Property<string>("vendorcode")
                        .HasColumnType("text");

                    b.Property<string>("vendorname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSPO");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.PO.vSPODetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("podate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("pono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("potype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .HasColumnType("text");

                    b.Property<string>("vendorcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSPODetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.ProductionConsumption.ConsumptionDetails", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("amount")
                        .HasColumnType("integer");

                    b.Property<string>("branchcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("companycode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("productcode")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("rate")
                        .HasColumnType("integer");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ConsDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.ProductionConsumption.ProductionConsumption", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("branchcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("companycode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("conTotal")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("maxvch")
                        .HasColumnType("integer");

                    b.Property<int>("proTotal")
                        .HasColumnType("integer");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ProCon");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.ProductionConsumption.ProductionDetails", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("amount")
                        .HasColumnType("integer");

                    b.Property<string>("branchcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("companycode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("productcode")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("rate")
                        .HasColumnType("integer");

                    b.Property<string>("vchno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ProDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SALES.vSales", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("closingValue")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .HasColumnType("text");

                    b.Property<string>("customername")
                        .HasColumnType("text");

                    b.Property<string>("deliveryaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("saleaccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("soid")
                        .HasColumnType("integer");

                    b.Property<string>("sono")
                        .HasColumnType("text");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tds")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("vinvdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vinvno")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSales");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SALES.vSalesCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("grntype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vSalesCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SALES.vSalesDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSalesDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SALES.vSSales", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("closingValue")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .HasColumnType("text");

                    b.Property<string>("customername")
                        .HasColumnType("text");

                    b.Property<string>("deliveryaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("saleaccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .HasColumnType("text");

                    b.Property<int>("ssid")
                        .HasColumnType("integer");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tds")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("vinvdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vinvno")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSSales");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SALES.vSSalesCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("grnno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("grntype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("vSSalesCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SALES.vSSalesDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSSalesDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SETTINGS.defaultaccounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("accountcode")
                        .HasColumnType("text");

                    b.Property<string>("key")
                        .HasColumnType("text");

                    b.Property<string>("vchtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("defaultaccounts");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SETTINGS.purchaseDefAcc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("discAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("insuAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("packAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("rounding")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tcsAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tranAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("purchaseDefAcc");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SETTINGS.saleDefAcc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("discAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("insuAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("packAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("rounding")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tcsAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tranAcc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("saleDefAcc");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SO.salesRef", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("refname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("salesRef");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SO.soCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sotype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("soCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SO.ssoCusFields", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("efieldname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("efieldvalue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sotype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ssoCusFields");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SO.vSO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("closingValue")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .HasColumnType("text");

                    b.Property<string>("customername")
                        .HasColumnType("text");

                    b.Property<string>("deliveryaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("soid")
                        .HasColumnType("integer");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sotype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("vSO");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SO.vSODetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sotype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<string>("uom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("uomcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("vSODetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SO.vSSO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("closingValue")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .HasColumnType("text");

                    b.Property<string>("customername")
                        .HasColumnType("text");

                    b.Property<string>("deliveryaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("inValue")
                        .HasColumnType("numeric");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<decimal>("pkRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("pkValue")
                        .HasColumnType("numeric");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<string>("salerefname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sotype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ssoid")
                        .HasColumnType("integer");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tcsValue")
                        .HasColumnType("numeric");

                    b.Property<string>("termsandcondition")
                        .HasColumnType("text");

                    b.Property<decimal>("trRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("trValue")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("vSSO");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.SO.vSSODetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<decimal>("insurence")
                        .HasColumnType("numeric");

                    b.Property<decimal>("packing")
                        .HasColumnType("numeric");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sotype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.Property<decimal>("transport")
                        .HasColumnType("numeric");

                    b.Property<decimal>("uom")
                        .HasColumnType("numeric");

                    b.Property<decimal>("uomcode")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("vSSODetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.STOCKJOURNAL.stockIN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .HasColumnType("text");

                    b.Property<string>("customername")
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("invno")
                        .HasColumnType("integer");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .HasColumnType("text");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tds")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("vinvdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vinvno")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("stockIN");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.STOCKJOURNAL.stockINDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("stockINDetails");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.STOCKJOURNAL.stockOUT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<decimal>("cgstTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .HasColumnType("text");

                    b.Property<string>("customername")
                        .HasColumnType("text");

                    b.Property<decimal>("discountTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("expDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<decimal>("igstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("invno")
                        .HasColumnType("integer");

                    b.Property<string>("invoicecopy")
                        .HasColumnType("text");

                    b.Property<decimal>("net")
                        .HasColumnType("numeric");

                    b.Property<string>("payTerm")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<decimal>("roundedoff")
                        .HasColumnType("numeric");

                    b.Property<decimal>("sgstTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .HasColumnType("text");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("tds")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("vinvdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("vinvno")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("stockOUT");
                });

            modelBuilder.Entity("AuggitAPIServer.Model.STOCKJOURNAL.stockOUTDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RCreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("company")
                        .HasColumnType("text");

                    b.Property<string>("customercode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("disc")
                        .HasColumnType("numeric");

                    b.Property<decimal>("discvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("fy")
                        .HasColumnType("text");

                    b.Property<string>("godown")
                        .HasColumnType("text");

                    b.Property<decimal>("gst")
                        .HasColumnType("numeric");

                    b.Property<decimal>("gstvalue")
                        .HasColumnType("numeric");

                    b.Property<string>("hsn")
                        .HasColumnType("text");

                    b.Property<DateTime>("invdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product")
                        .HasColumnType("text");

                    b.Property<string>("productcode")
                        .HasColumnType("text");

                    b.Property<decimal>("qty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("rate")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .HasColumnType("text");

                    b.Property<DateTime>("sodate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("taxable")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("stockOUTDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
